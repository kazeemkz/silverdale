@*@model IEnumerable<SchoolManagement.Model.NewsBoard>*@
@model PagedList.IPagedList<SilverDaleSchools.Model.NewsBoard>
@{
    ViewBag.Title = "News Board";
}

<h4>NEWS BOARD</h4>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<br />

@using (Html.BeginForm("Index", "NewsBoard"))
{
    <h4>VIEW NEWS BOARD</h4>
    <fieldset>
        <legend>Search Box</legend>
        <table>

            <tr>
                <td>Date From:</td>
                <td>@Html.TextBox("date") </td>

            </tr>
            <tr>
                <td></td>
                <td> </td>
            </tr>
            <tr>
                <td>Date To:</td>
                <td>@Html.TextBox("dateto") </td>

            </tr>


        </table>

        <input type="submit" value="Search" id="search" class="btn-primary" />
    </fieldset>
}
<fieldset>
    <legend> </legend>
    @*<table class="table table-striped table-hover table-bordered table-condensed">*@
    <table class="table table-striped table-hover table-bordered table-condensed table-responsive">
        <tr>
            <th>
                <b>Caption</b>
            </th>
            @* <th>
                    @Html.DisplayNameFor(model => model.Content)
                </th>*@

            <th>
                <b>Date</b>
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Caption)
                </td>
                <td>
                    @string.Format("{0: dd-MMMM-yyyy   hh:mm tt}", item.Date)
                    @*   @Html.DisplayFor(modelItem => item.Date)*@
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = SilverDaleSchools.Models.Encript.EncryptString(item.NewsBoardID.ToString(), true) }, null)|
                    @*@Html.ActionLink("Edit", "Edit", new { id = item.NewsBoardID }) |*@
                    @*  @Html.ActionLink("Details", "Details", new { id = item.NewsBoardID }) |*@
                    @Html.ActionLink("Details", "Details", new { id = SilverDaleSchools.Models.Encript.EncryptString(item.NewsBoardID.ToString(), true) }, null)|
                    @*           @Html.ActionLink("Delete", "Delete", new { id = item.NewsBoardID })*@
                    @Html.ActionLink("Delete", "Delete", new { id = SilverDaleSchools.Models.Encript.EncryptString(item.NewsBoardID.ToString(), true) }, null)|
                </td>
            </tr>
        }

    </table>
</fieldset>
<table>
    <tr>
        <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount
            &nbsp;
        </td>
        @if (Model.HasPreviousPage)
        {
            <td>
                @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            @Html.Raw("&nbsp;")
            <td>
                @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td><<
            </td>
            <td>
                @Html.Raw("&nbsp;")
                < Prev
            </td>
        }
        &nbsp;
    @if (Model.HasNextPage)
    {
        <td>
            @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>
            @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
    }
    else
    {
        <td>Next >
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>>>
        </td>
    }
    </tr>
</table>
@section Scripts {

@*<script src="~/Scripts/jquery-ui-1.8.24.min.js"></script>*@
    @Scripts.Render("~/bundles/jqueryval")
    <script>
     
        $("#date").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'mm/dd/yy',
            gotoCurrent: true
        });

        $("#dateto").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'mm/dd/yy',
            gotoCurrent: true
        });


    </script>
}
