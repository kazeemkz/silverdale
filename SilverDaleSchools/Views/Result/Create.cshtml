@model SilverDaleSchools.Model.Result

@{
    ViewBag.Title = "Create";
}

@*<h2>Create</h2>*@


@using (Html.BeginForm("Create", "Result", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @*@Html.AntiForgeryToken()*@
    <fieldset>
        <legend>UPLOAD STUDENTS' RESULT</legend>
        <div class="form-horizontal">
            <h6>Upload an Excel (xlsx or xls) File ONLY</h6>
            <hr />
            @Html.ValidationSummary(true)


            <div class="form-group">
                @Html.LabelFor(model => model.Session, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Session, SilverDaleSchools.Model.LevelDictionary.SessionList)
                    @Html.ValidationMessageFor(model => model.Session)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Term, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Term, SilverDaleSchools.Model.LevelDictionary.TermWithNull)
                    @Html.ValidationMessageFor(model => model.Term)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Class, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Class, new SelectList((System.Collections.IEnumerable)ViewData["Class"], "Value", "Text"))
                    @Html.ValidationMessageFor(model => model.Class)
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Upload an Excel (xlsx or xls) File ONLY", new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <input type="file" id="FileUpload1" name="FileUpload1" class="btn btn-success" /><br />
                    @*@Html.ValidationMessageFor(model => model.FirstName)*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Upload" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
