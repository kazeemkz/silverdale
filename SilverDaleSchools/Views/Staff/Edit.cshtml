@model SilverDaleSchools.Model.Staff

@{
    ViewBag.Title = "Edit";
}

<h2></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <fieldset>
        <legend></legend>
        <div class="form-horizontal">
            <h5><b>EDIT STAFF INFORMATION</b></h5>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.StaffID)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName)
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Middle, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Middle)
                    @Html.ValidationMessageFor(model => model.Middle)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName)
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.UserID, new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.UserID)
                    @Html.ValidationMessageFor(model => model.UserID)
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Sex, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Sex, SilverDaleSchools.Model.SexDictionary.SexDicoList)
                    @Html.ValidationMessageFor(model => model.Sex)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Role, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Role, new SelectList((System.Collections.IEnumerable)ViewData["Role"], "Value", "Text"))
                    @Html.ValidationMessageFor(model => model.Role)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telephone, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telephone)
                    @Html.ValidationMessageFor(model => model.Telephone)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>
            @Html.HiddenFor(model => model.StaffID)

            <div class="form-group">
                @*@Html.LabelFor(model => model.EnrollmentDate, new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.EnrollmentDate)
                    @Html.ValidationMessageFor(model => model.EnrollmentDate)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB)
                    @Html.ValidationMessageFor(model => model.DOB)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BloodGroup, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BloodGroup)
                    @Html.ValidationMessageFor(model => model.BloodGroup)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Genotype, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Genotype)
                    @Html.ValidationMessageFor(model => model.Genotype)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Disability, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Disability)
                    @Html.ValidationMessageFor(model => model.Disability)
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>


    //$("#tabs").tabs().width("450px");
    //$("#accordion").accordion().width("235px");

    $("#EnrollmentDate").datepicker({
        changeMonth: true,
        changeYear: true,
        //dateFormat: 'dd/mm/yy',
        gotoCurrent: true
    });
    $("#DOB").datepicker({
        changeMonth: true,
        changeYear: true,
        //dateFormat: 'dd/mm/yy',
        gotoCurrent: true
    });
</script>

}
