@using PagedList.Mvc
@model SilverDaleSchools.Models.IndexViewModel
@{
    ViewBag.Title = "User Administration";
    //  Layout = "~/Views/Shared/_Layout.mobile.cshtml";
    // Layout = "~/Views/Shared/_Layout3.cshtml";
}

<link href='@Url.Content("~/Content/MvcMembership.css")' rel="stylesheet" type="text/css" />
<link href='@Url.Content("~/Content/PagedList.css")' rel="stylesheet" type="text/css" />

@if (!Model.IsRolesEnabled)
{
    <p class="mvcMembership-warning">
        WARNING: Your Role Provider is currently disabled -
        any user may currently visit this page.<br />
        Change &lt;roleManager enabled="false"&gt; to &lt;roleManager enabled="true"&gt;
        in your web.config file.
    </p>
}

<h2 class="mvcMembership">User Administration</h2>

<h3 class="mvcMembership">
    Find a User
    @if (!string.IsNullOrWhiteSpace(Model.Search))
    {
        <span>(@Html.ActionLink("Clear Search", "Index"))</span>
    }
</h3>
<form method="get" class="mvcMembership-searchForm">
    <fieldset>
        <legend>Search Box</legend>
        <label>
            User Identity or Email Address:
            <input type="text" name="search" value="@Model.Search" />
            <input type="submit" value="Search" class="btn-primary" />
        </label>
    </fieldset>
</form>

<table class="table table-striped table-hover table-bordered table-condensed">
    <tr>
        <th>
            <b>User Name</b>
        </th>
        <th>
            <b>E-Mail</b>
        </th>
        <th>
            <b>Last Seen</b>
        </th>
        @* <th>
                <b>Comment</b>
            </th>*@

    </tr>

    @*<h3 class="mvcMembership">Users (@Html.ActionLink("New User", "CreateUser", "UserAdministration"))
        </h3>*@
    @if (Model.Users.Count > 0)
    {

        foreach (var user in Model.Users)
        {

            if (user.UserName == "5000001")
            {
                continue;
            }
            else
            {
                <tr>
                    <td>
                        @Html.ActionLink(user.UserName, "Details", new { id = user.ProviderUserKey })
                    </td>
                    <td>
                        <a href="mailto:@user.Email">@user.Email</a>
                    </td>
                    <td>
                        @if (user.IsOnline)
                        {
                            <span class="mvcMembership-isOnline">Online</span>
                        }
                        else
                        {
                            <span class="mvcMembership-isOffline">
                                Offline for
                                @{
                            var offlineSince = (DateTime.Now - user.LastActivityDate);
                            if (offlineSince.TotalSeconds <= 60)
                            {
                                <text>1 minute.</text>
                            }
                            else if (offlineSince.TotalMinutes < 60)
                            {
                                <text>@Math.Floor(offlineSince.TotalMinutes) minutes.</text>
                            }
                            else if (offlineSince.TotalMinutes < 120)
                            {
                                <text>1 hour</text>
                            }
                            else if (offlineSince.TotalHours < 24)
                            {
                                <text>@Math.Floor(offlineSince.TotalHours) hours.</text>
                            }
                            else if (offlineSince.TotalHours < 48)
                            {
                                <text>1 day.</text>
                            }
                            else
                            {
                                <text>@Math.Floor(offlineSince.TotalDays) days.</text>
                            }
                                }
                            </span>
                        }
                    </td>

                    @*  <td>
                            @if (!string.IsNullOrEmpty(user.Comment))
                            {
                                <span class="mvcMembership-comment">@user.Comment</span>
                            }
                        </td>*@



                    @*  }
                        else
                         {
                             <p>No users have registered.</p>
                         }*@
                </tr>
            }
        }
    }
    @Html.PagedListPager(Model.Users, page => Url.Action("Index", new { page, search = Model.Search }))
</table>

<br />

@if (Model.IsRolesEnabled)
{
    <h3 class="mvcMembership">Roles</h3>
    <table class="table table-striped table-hover table-bordered table-condensed">
        <tr>
            <th>Role Name</th>
            <th>Edit Role Privileges</th>
            <th>Delete Role</th>
        </tr>
        @if (Model.Roles.Count() > 0)
        {

            foreach (var role in Model.Roles)
            {
                <tr>

                    <td>
                        @Html.ActionLink(role, "Role", new { id = role })
                    </td>
                    <td>
                        @if ( role == "Default")
                        {
                          
                        }
                        else
                        {
                              @Html.ActionLink("Edit", "Edit", "MyRole", new { roleName = role }, null)
                        }
                    </td>
                    <td>
                        @if (role == "Principal" || role == "Student" || role == "Class Teacher" || role == "Subject Teacher" || role == "SuperAdmin" || role == "Default")
                        {

                        }
                        else
                        {
                            @Html.ActionLink("Delete Role","Delete", new {id=role })
                            @*using (Html.BeginForm("DeleteRole", "UserAdministration", new { id = role }))
                            {
                                <input type="submit" value="Delete" class="btn-primary" />
                            }*@

                        }
                    </td>

                </tr>
            }

        }

        else
        {
            <p>No roles have been created.</p>
        }
    </table>

    @*using (Html.BeginForm("CreateRole", "UserAdministration"))
    {
        <fieldset>
            <legend>Create a New Role</legend>
            <label for="id">Role:</label>
            @Html.TextBox("id")
            <input type="submit" value="Create Role" class="btn-primary" />
        </fieldset>
    }*@
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>


        //$("#tabs").tabs().width("750px");
        //$("#tabs1").tabs().width("750px");

        //$("#accordion").accordion().width("235px");
    </script>
}
